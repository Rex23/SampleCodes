*A very good bottom-up DP template problem!!!!!!!!!:
712. Minimum ASCII Delete Sum for Two Strings

*stock buy and sell problems:

https://leetcode.com/problems/best-time-to-buy-and-sell-stock-with-transaction-fee/discuss/108870/Most-consistent-ways-of-dealing-with-the-series-of-stock-problems

121. Best Time to Buy and Sell Stock
122. Best Time to Buy and Sell Stock II
123. Best Time to Buy and Sell Stock III
188. Best Time to Buy and Sell Stock IV
309. Best Time to Buy and Sell Stock with Cooldown
714. Best Time to Buy and Sell Stock with Transaction Fee (definitely re-do!!! a transaction is made of buy and sell (a pair contributes to a fee))

*64. Minimum Path Sum (a standard dynamic programming problem. can re-do sometime later.)

*651. 4 Keys Keyboard:
this problem is pretty hard!
it is a dynamic programming problem.
it assumes that:
the maximum can either achieved by:
add one from previous
or
multiple previous state by some number.
it needs some derivations and assume that you know you can only multiply to achieve the maximum!
re-do!!!

343. Integer Break (a dp problem. may re-do.)

1230. Toss Strange Coins (failed to do it. re-do!!!)

1048. Longest String Chain (First of all, I did not figure out I should use DP. Secondly, very slow in solving it. Had to debug. Re-do!!! And reference the given solution.)

873. Length of Longest Fibonacci Subsequence (the trick is that dp(i,j) = max(dp(j - i, i) + 1). Convert data structure from element to index. Classic!!! did not figure out. very hard!!! re-do!!!!!!!!!!!!!)

978. Longest Turbulent Subarray (a dynamic programming problem. 1, 0, 1, 0, 1, 1. a very good dynamic programming problem! the trick is change the trend to 1, -1, and 0 and use dp to solve it. worth re-do!!!)

562. Longest Line of Consecutive One in Matrix (a great dynamic programming problem made so many mistakes!!! can do it again for practise.)
